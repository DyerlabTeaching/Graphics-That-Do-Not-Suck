---
title: "In Class Activity - Plotting"
format: 
  html:
    code-tools: true
    toc: false
execute:
  echo: true
---


## The Data

Let's start by playing around with some of the [Rice Rivers Center](https://ricerivers.vcu.edu) data from the script you wrote in a previous exercise (I am assuming it is in your current course repository directory).

```{r}
source("get_rice_data.R")
rice_data <- get_rice_data()
summary( rice_data )
```




## Classic Graphics



*Univariate - Histograms*

```{r}
hist( rice_data$Air_Temperature, 
      xlab = "Temparture (°C)",
      main = "",
      col = "aquamarine4", 
      xlim = c(-5,25),
      cex.lab = 1.5,
      cex.axis = 1.25 ) 

```


*Density Plots*


```{r}
d <- density( rice_data$Air_Temperature , na.rm=TRUE )
d
plot(d)
```





### Bivariate


*Scatter Plots*

```{r}
plot( rice_data$Water_Depth[1:10], rice_data$Air_Temperature[1:10], type="l", pch=3, lwd= 3, lty=3, bty="l",
      xlim = c(4.75, 4.95)) 

plot( rice_data$Water_Temperature[1:10], rice_data$Air_Temperature[1:10], type="p", pch=16, bty="l",
      xlim = c(4.75, 4.95) ) 
```

*Customization*

Parameter | Description
----------|-----------------------------------------------------------------------------------------------------------
`type`    | The kind of plot to show ('p'oint, 'l'ine, 'b'oth, or 'o'ver).  A point plot is the default.
`pch`     | The character (or symbol) being used to plot.  There 26 recognized general characters to use for plotting.  The default is `pch=1`. 
`col`     | The color of the symbols/lines that are plot.
`cex`     | The magnification size of the character being plot.  The default is `cex=1` and deviation from that will increase (cex > 1) or decrease (0 < cex < 1) the scaling of the symbols.  Also works for `cex.lab` and `cex.axis`.
`lwd`     | The width of any lines in the plot.
`lty`     | The type of line to be plot (solid, dashed, etc.)
`bty`     | The 'Box' type around the plot ("o", "1", "7","c","u", "]", and my favorite "n")

```{r}

```


![](media/symbology.png)


```{r}

```


*Color spaces*

Sources of color:

- Hex ([coolors](https://coolors.co/))
- Named (via `colors()`)  
- [ColorBrewer](https://colorbrewer2.org/)



```{r}
library(RColorBrewer)
display.brewer.all()
```


*Boxplots*

```{r}
boxplot( Air_Temperature ~ Month, data=rice_data, notch=TRUE)
```



*Text Overlays*


```{r}
rice_data |>
  head(49) |>
  tail( 49-13 ) |>
  head( 26 ) |> 
  droplevels() |>
  select( Air_Temperature, Water_Depth, Date ) -> df

plot( df$Air_Temperature ~ df$Water_Depth,
      type="b", 
      pch=16, 
      col = hcl.colors(nrow(df)),
      xlab="Water Depth (m)",
      ylab="Air Temperature (°C)",
      bty="n",
      xlim=c(4.2,5.4))
text( 4.48,-2.20, 
      min(df$Date ),
      cex=0.65)
text( 5.17, -1.05,
      max(df$Date),
      cex=0.65)
```




## GGPlot Graphics



### Univariate Data


*Histograms*

```{r}
rice_data %>%
  ggplot( aes( x=Air_Temperature) ) +
  geom_histogram( bins = 100 )
```


*Barplots*

```{r}
rice_data |>
  group_by( Month ) |>
  summarize( Temperature = mean( Air_Temperature)) |>
  ggplot( aes( Month, Temperature) ) + 
  geom_col()
```

```{r}
rice_data %>%
  ggplot( aes( x=Month, y=Air_Temperature ) ) + 
  geom_boxplot( notch = TRUE ) + 
  theme_minimal()
```




*Pie Charts*


```{r}

```


### Bivariate Data

*Scatter Plots*

```{r}

```


*Radial Plots*

```{r}

```





### Customizations


*Themes*

```{r}

```


*Color Spaces*


```{r}

```


